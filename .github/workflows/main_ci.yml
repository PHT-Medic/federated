# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]
  release:
    types: # This configuration does not affect the page_build event above
      - created
jobs:
  test:

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        ports:
          - 5442:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: "pipenv"
      - name: Install pipenv
        run: pip install pipenv
      - run: pipenv install --dev

      - name: Build and run aggregator
        run: |
          docker build . -t aggregator -f ./docker/Dockerfile_aggregator
          docker run -d --name aggregator -e "AGGREGATOR_DB=postgresql+psycopg2://admin:admin@postgres:5432/postgres" -p 8000:8000 aggregator
          docker ps -a
      - name: Wait for aggregator
        run: sleep 10s
        shell: bash
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      - name: Tests
#
#        run:  |
#          pipenv run pip install .
#          pipenv run pytest tests
      - name: Tests and coverage report
        env:
          AGGREGATOR_TEST_DB: postgresql+psycopg2://admin:admin@localhost:5442/postgres
        run: |
          pipenv run pip install .
          pipenv run coverage run -m pytest ./pht_federated/tests
          pipenv run coverage xml

      - name: Stop containers
        if: always()
        run: |
          docker stop aggregator
          docker rm aggregator
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          name: codecov-umbrella
          verbose: true
